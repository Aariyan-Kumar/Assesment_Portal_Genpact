/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.25
 * Generated at: 2024-07-04 10:54:43 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class addQuestion_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

response.setHeader("Cache-Control", "no-cache, no-store, must-revalidate");
response.setHeader("Pragma", "no-cache");
response.setDateHeader("Expires", 0);

if (session.getAttribute("user") == null) {
    response.sendRedirect("index.jsp");
    return;
}

String testName = request.getParameter("testName");
int numOfQuestion = Integer.parseInt(request.getParameter("numOfQuestion"));


      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/addQuestion.css\">\r\n");
      out.write("<title>Adding Question</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("    	<h1>Add Your Questions here</h1>\r\n");
      out.write("	</header>\r\n");
      out.write("	\r\n");
      out.write("	<form action = \"AddQuestionsServlet\" method=\"post\">\r\n");
      out.write("		<h2>Adding Questions for ");
      out.print( testName );
      out.write("</h2>\r\n");
      out.write("		");

			for(int i = 1; i <= numOfQuestion; i++)
			{
		
      out.write("\r\n");
      out.write("		<div>\r\n");
      out.write("        <label for=\"question");
      out.print(i);
      out.write("\">Question ");
      out.print(i);
      out.write("</label>\r\n");
      out.write("        <input type=\"text\" id=\"question");
      out.print(i);
      out.write("\" name=\"question");
      out.print(i);
      out.write("\" required>\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <div>\r\n");
      out.write("	        <label for=\"optionA");
      out.print(i);
      out.write("\">Option A</label>\r\n");
      out.write("	        <input type=\"text\" id=\"optionA");
      out.print(i);
      out.write("\" name=\"optionA");
      out.print(i);
      out.write("\" required>\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <div>\r\n");
      out.write("	        <label for=\"optionB");
      out.print(i);
      out.write("\">Option B</label>\r\n");
      out.write("	        <input type=\"text\" id=\"optionB");
      out.print(i);
      out.write("\" name=\"optionB");
      out.print(i);
      out.write("\" required>\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <div>\r\n");
      out.write("	        <label for=\"optionC");
      out.print(i);
      out.write("\">Option C</label>\r\n");
      out.write("	        <input type=\"text\" id=\"optionC");
      out.print(i);
      out.write("\" name=\"optionC");
      out.print(i);
      out.write("\" required>\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <div>\r\n");
      out.write("	        <label for=\"optionD");
      out.print(i);
      out.write("\">Option D</label>\r\n");
      out.write("	        <input type=\"text\" id=\"optionD");
      out.print(i);
      out.write("\" name=\"optionD");
      out.print(i);
      out.write("\" required>\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <div>\r\n");
      out.write("	        <label for=\"correctOption");
      out.print(i);
      out.write("\">Correct Option</label>\r\n");
      out.write("	        <input type=\"text\" id=\"correctOption");
      out.print(i);
      out.write("\" name=\"correctOption");
      out.print(i);
      out.write("\" required>\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <div>\r\n");
      out.write("	        <input type=\"hidden\" id=\"testName\" name=\"testName\" value=\"");
      out.print( testName );
      out.write("\">\r\n");
      out.write("	    </div>\r\n");
      out.write("	    <hr>\r\n");
      out.write("		");

			}		
		
      out.write("	    \r\n");
      out.write("	    <div>\r\n");
      out.write("	        <button type=\"submit\">Submit Questions</button>\r\n");
      out.write("	    </div>\r\n");
      out.write("	</form>\r\n");
      out.write("	<footer>\r\n");
      out.write("    	<p>&copy; 2023 Your Company</p>\r\n");
      out.write("	</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
